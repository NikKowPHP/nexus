generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContentStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  id                   String    @id @default(cuid())
  email                String    @unique
  password             String
  is_subscribed        Boolean   @default(false)
  stripe_customer_id   String?   @unique
  subscription_status  String?
  xp_records      UserXP[]
  badges          UserBadge[]
  streaks         UserStreak[]
  // ... other existing fields
}

model Plan {
  id           String  @id @default(cuid())
  stripeId     String  @unique @map("stripe_id")
  name         String
  price        Float
  interval     String
  description  String?

  @@map("plans")
}

model UserXP {
  id          String  @id @default(cuid())
  user        User    @relation(fields: [user_id], references: [id])
  user_id     String
  total_xp    Int     @default(0)
  last_updated DateTime @default(now())
  source      String?

  @@index([user_id])
  @@map("user_xp")
}

model Badge {
  id           String     @id @default(cuid())
  name         String
  description  String
  image_url    String
  criteria     String
  user_badges  UserBadge[]

  @@map("badges")
}

model UserBadge {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  badge      Badge    @relation(fields: [badge_id], references: [id])
  badge_id   String
  awarded_at DateTime @default(now())

  @@index([user_id])
  @@map("user_badges")
}

model UserStreak {
  id                 String   @id @default(cuid())
  user               User     @relation(fields: [user_id], references: [id])
  user_id           String
  last_activity_date DateTime
  current_streak    Int      @default(0)
  longest_streak    Int      @default(0)

  @@index([user_id])
  @@map("user_streaks")
}

model Node {
  id          String       @id @default(cuid())
  title       String
  description String
  type        String
  status      ContentStatus @default(DRAFT)
  roadmap     Roadmap      @relation(fields: [roadmap_id], references: [id])
  roadmap_id  String

  @@map("nodes")
}

model Roadmap {
  id          String       @id @default(cuid())
  title       String
  description String?
  status      ContentStatus @default(DRAFT)
  nodes       Node[]

  @@map("roadmaps")
}

// ... rest of existing schema